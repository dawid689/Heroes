{"ast":null,"code":"import { HEROES } from './mock-heroes';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./message.service\";\nimport * as i2 from \"@angular/common/http\";\nexport class HeroService {\n  constructor(messageService, http) {\n    this.messageService = messageService;\n    this.http = http;\n    this.heroesUrl = 'api/heroes';\n  }\n  getHeroes() {\n    // const heroes = of(HEROES);\n    this.messageService.add('HeroService: fetched heroes');\n    // return heroes;\n    /** GET heroes from the server */\n    return this.http.get(this.heroesUrl);\n  }\n  getHero(id) {\n    const hero = HEROES.find(h => h.id === id);\n    this.messageService.add(`HeroService: fetched hero id=${id}`);\n    return of(hero);\n  }\n  log(message) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n}\nHeroService.ɵfac = function HeroService_Factory(t) {\n  return new (t || HeroService)(i0.ɵɵinject(i1.MessageService), i0.ɵɵinject(i2.HttpClient));\n};\nHeroService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HeroService,\n  factory: HeroService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAqBC,EAAE,QAAQ,MAAM;;;;AAOrC,OAAM,MAAOC,WAAW;EACtBC,YACUC,cAA8B,EAC9BC,IAAgB;IADhB,mBAAc,GAAdD,cAAc;IACd,SAAI,GAAJC,IAAI;IAsBN,cAAS,GAAG,YAAY;EArB7B;EAEHC,SAAS;IACP;IACA,IAAI,CAACF,cAAc,CAACG,GAAG,CAAC,6BAA6B,CAAC;IACtD;IAEA;IACA,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,IAAI,CAACC,SAAS,CAAC;EAC9C;EAEAC,OAAO,CAACC,EAAU;IAChB,MAAMC,IAAI,GAAGZ,MAAM,CAACa,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACH,EAAE,KAAKA,EAAE,CAAE;IAC7C,IAAI,CAACP,cAAc,CAACG,GAAG,CAAC,gCAAgCI,EAAE,EAAE,CAAC;IAC7D,OAAOV,EAAE,CAACW,IAAI,CAAC;EACjB;EAEQG,GAAG,CAACC,OAAe;IACzB,IAAI,CAACZ,cAAc,CAACG,GAAG,CAAC,gBAAgBS,OAAO,EAAE,CAAC;EACpD;;;mBAvBWd,WAAW;AAAA;;SAAXA,WAAW;EAAAe,SAAXf,WAAW;EAAAgB,YAFV;AAAM","names":["HEROES","of","HeroService","constructor","messageService","http","getHeroes","add","get","heroesUrl","getHero","id","hero","find","h","log","message","factory","providedIn"],"sourceRoot":"","sources":["D:\\_ANGULAR\\Heroes\\Heroes\\heroes\\src\\app\\hero.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Hero } from './hero';\nimport { HEROES } from './mock-heroes';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HeroService {\n  constructor(\n    private messageService: MessageService,\n    private http: HttpClient\n  ) {}\n\n  getHeroes(): Observable<Hero[]> {\n    // const heroes = of(HEROES);\n    this.messageService.add('HeroService: fetched heroes');\n    // return heroes;\n\n    /** GET heroes from the server */\n    return this.http.get<Hero[]>(this.heroesUrl);\n  }\n\n  getHero(id: number): Observable<Hero> {\n    const hero = HEROES.find((h) => h.id === id)!;\n    this.messageService.add(`HeroService: fetched hero id=${id}`);\n    return of(hero);\n  }\n\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n\n  private heroesUrl = 'api/heroes';\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}